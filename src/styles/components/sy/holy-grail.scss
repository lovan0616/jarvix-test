@import '../../common/variables.scss';

/* variables ----------------------------- */

$header-z-index: 2001;
$header-height: 54px;
$header-extend-height: 54px;
$footer-height: 50px;
$aside-left-width: 280px;
$aside-right-width: 280px;
$aside-left-menu-width: 200px;
$aside-right-menu-width: 200px;
$container-max-width: 980px;
$container-min-width: 1000px;
$container-horizontal-padding: 30px;
$container-vertical-padding: 0;
$center-horizontal-padding: 30px;
$center-vertical-padding: 0;
$bg: transparent;
$header-bg: radial-gradient(circle at center, #315658 0%,#213939 50%);
$header-extend-bg: $theme-color-white;
$footer-bg: transparent;
$main-bg: transparent;
$center-bg: transparent;
$aside-left-bg: transparent;
$aside-left-padding-right: 30px;
$aside-right-bg: transparent;
$aside-right-padding-left: 30px;
$shadow: 0 4px 8px rgba(0, 0, 0, .08), 0 0 24px rgba(0, 0, 0, .04);
/* composes ----------------------------- */

%maxWidth {
  max-width: $container-max-width;
  margin: 0 auto;
}

/* styles ----------------------------- */

.sy-holy-grail {

  display: flex;
  flex-direction: column;

  .wrapper {
    min-height: 100vh;
    background: $bg;
    background-size: cover;
    background-repeat: no-repeat;
  }

  .header {
    position: relative;
    width: 100%;
    height: auto;
    height: $header-height;
    z-index: $header-z-index; /* make sure content will uper than asign left and right */
    background: $header-bg;
    box-shadow: $shadow;
  }

  .footer {
    width: 100%;
    height: $footer-height;
    background: $footer-bg;
  }

  .header-extend {
    width: 100%;
    height: $header-extend-height;
    z-index: 1; /* make sure content will uper than asign left and right */
    background: $header-extend-bg;
  }

  .main {
    display: flex;
    flex-direction: row;
    background: $main-bg;
    width: 100%;
    min-height: calc(100vh - #{$header-height});
    // padding: $container-vertical-padding $container-horizontal-padding;
    @extend %maxWidth;
  }

  .container {
    width: 100%;
    height: 100%;
    // padding: $container-vertical-padding $container-horizontal-padding;
    @extend %maxWidth;
  }

  .fullWidth {
    max-width: 100%;
    padding: 0;
  }

  .center {
    flex: 1;
    margin: 0;
    // padding: $center-vertical-padding $center-horizontal-padding;
    background: $center-bg;
    width: 100%;
  }

  .aside-left {
    background: $aside-left-bg;
    width: $aside-left-width;
    height: 100%;
    min-width: $aside-left-width;
    /* define the width of el-menu[mode="vertical"] in aside left*/
    :global .el-menu:not(.el-menu--collapse) {
      width: $aside-left-menu-width;
    }
  }

  .aside-right {
    background: $aside-right-bg;
    width: $aside-right-width;
    height: 100%;
    /* define the width of el-menu[mode="vertical"] in aside right*/
    :global .el-menu:not(.el-menu--collapse) {
      width: $aside-right-menu-width;
    }
  }

  &.is-header-fixed {
    .header {
      position: fixed;
      top: 0;
      left: 0;
    }
    .main {
      margin-top: $header-height;
    }
  }

  &.is-footer-fixed {
    .footer {
      position: fixed;
      bottom: 0;
      left: 0;
    }
    .main {
      margin-bottom: $header-height;
    }
  }

  &.is-aside-left-active.is-aside-left-fixed {

    .aside-left {
      position: fixed;
      height: calc(100vh - #{$header-height});
      z-index: 1;
      overflow-y: auto;
    }

    .center {
      margin-left: $aside-left-width;
    }
  }

  &.is-aside-right-active.is-aside-right-fixed {

    .aside-right {
      position: fixed;
      height: calc(100vh - #{$header-height});
      z-index: 1;
      overflow-y: auto;
    }

    .center {
      margin-right: $aside-right-width;
    }
  }

  &.is-aside-left-active {
    .center {
      max-width: calc(100% - #{$aside-left-width});
    }

    .aside-left {
      padding-right: $container-horizontal-padding;
    }
  }

  &.is-aside-right-active {
    .center {
      max-width: calc(100% - #{$aside-right-width});
    }

    .aside-right {
      padding-left: $container-horizontal-padding;
    }  
  }

  &.is-aside-right-active.is-aside-left-active {
    .center {
      max-width: calc(100% - #{$aside-left-width} - #{$aside-right-width});
    }
  }

  &.is-header-extend-active {
    .header {
      height: auto;
      height: calc(#{$header-height} + #{$header-extend-height});
      .container {
        height: $header-height;
      }
    }

    .header-extend {
      .container {
        height: $header-extend-height;
      }
    }

    .is-aside-left-active.is-aside-left-fixed {

      .aside-left {
        height: calc(100vh - #{$header-height} - #{$header-extend-height});

      }
    }

    .is-aside-right-active.is-aside-right-fixed {

      .aside-right {
        height: calc(100vh - #{$header-height} - #{$header-extend-height});
      }
    }
  }

  &.is-header-extend-active.is-header-fixed {
    .main {
      min-height: calc(100vh - #{$header-height} - #{$header-extend-height});
      margin-top: calc(#{$header-height} + #{$header-extend-height});
    }
  }

  &.is-footer-extend-active.is-footer-fixed {
    .main {
      /* min-height: calc(100vh - $footer-height - $header-extend-height); */
      margin-bottom: $footer-height;
    }
  }
}
